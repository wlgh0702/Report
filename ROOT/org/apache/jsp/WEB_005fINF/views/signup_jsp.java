/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-06 08:03:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_005fINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>T-soft</title>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\" integrity=\"sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        .signupWrapper {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 32%;\r\n");
      out.write("            left: 37%;\r\n");
      out.write("            width: 500px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .signupBtn {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            height: 30px;\r\n");
      out.write("            background-color: pink;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .signupBtn:hover {\r\n");
      out.write("            background-color: rgb(255, 159, 175);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #id, #pwd, #name, #birth, #email {\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            height: 30px;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-bottom: 1px solid pink;\r\n");
      out.write("            outline: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #id:focus, #pwd:focus, #name:focus, #birth:focus, #email:focus {\r\n");
      out.write("            border-bottom: 2px solid rgb(255, 159, 175);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .duplication {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: 83%;\r\n");
      out.write("            background-color: #ffedee;\r\n");
      out.write("            padding: 5px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .duplication:hover {\r\n");
      out.write("            background-color: pink;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"signupWrapper\">\r\n");
      out.write("    <h1>Sign Up</h1>\r\n");
      out.write("    <div class=\"duplication\" onclick=\"dup()\">중복검사</div>\r\n");
      out.write("    <form method=\"post\" action=\"/signup\">\r\n");
      out.write("        <input type=\"text\" id=\"id\" name=\"id\" placeholder=\"아이디를 입력해주세요\" required=\"required\" />\r\n");
      out.write("        <br>\r\n");
      out.write("        <input type=\"password\" id=\"pwd\" name=\"pwd\" placeholder=\"패스워드를 입력해주세요\" required=\"required\" />\r\n");
      out.write("        <br>\r\n");
      out.write("        <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"이름을 입력해주세요\" required=\"required\" />\r\n");
      out.write("        <br>\r\n");
      out.write("        <input type=\"text\" id=\"birth\" maxlength=\"8\" name=\"birth\" placeholder=\"생년월일을 입력해주세요 ex) 19970702\" />\r\n");
      out.write("        <br>\r\n");
      out.write("        <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"이메일을 입력해주세요\" />\r\n");
      out.write("        <br>\r\n");
      out.write("        <button type=\"submit\" class=\"signupBtn\" disabled>SingUp</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("    function dup() {\r\n");
      out.write("        let id = document.getElementById(\"id\").value;\r\n");
      out.write("        let btn = document.getElementsByClassName(\"signupBtn\")[0];\r\n");
      out.write("\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type : 'POST',\r\n");
      out.write("            data : {id : id},\r\n");
      out.write("            url : \"/duplication\",\r\n");
      out.write("            success : function(data) {\r\n");
      out.write("                if(data == 0) {\r\n");
      out.write("                    alert(\"아이디가 존재합니다. 다른 아이디를 입력해주세요\");\r\n");
      out.write("                    btn.disabled = true;\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert(\"사용가능한 아이디입니다.\");\r\n");
      out.write("                    btn.disabled = false;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
